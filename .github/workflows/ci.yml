# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Example CI for Lab 1 -- Java CI with Gradle

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'adopt'
        
    - name: Grant execute permission for gradlew
      run: chmod +x gradlew
      
    - name: Build with Gradle
      run: ./gradlew build
      
    - name: Testing with Gradle
      run: ./gradlew test
      
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      
      - name: Install OpenVPN
        run: |
          sudo apt-get update
          sudo apt-get --assume-yes --no-install-recommends install openvpn unzip
        
      - name: Setup VPN config
        run: |
          wget https://vpn-yeg.cloud.cybera.ca/vpn-yeg-ovpn.zip
          unzip vpn-yeg-ovpn.zip
          cd vpn-yeg-ovpn
          echo "${{ secrets.SECRET_USERNAME_PASSWORD }}" > secret.txt
          cat ../.github/vpn/client.conf > client.conf
          sudo mv ca.crt client.conf client.crt client.key secret.txt /etc/openvpn/
          cd ..
          rm -rf vpn-yeg-ovpn
          rm vpn-yeg-ovpn.zip
          
      - name: Connect VPN
        run: sudo systemctl start openvpn@client
        
      - name: Sleep for 10 seconds to allow VPN to connect
        uses: jakejarvis/wait-action@master
        with:
          time: '10s'
      
      - name: Copy repo to cloud
        uses: appleboy/scp-action@master
        env:
          HOST: ${{ secrets.HOST }}
          USERNAME: ${{ secrets.USERNAME }}
          PORT: ${{ secrets.PORT }}
          KEY: ${{ secrets.KEY }}
        with:
          source: "./"
          target: "~/prod"
          
      - name: Restart All Instances on Cloud
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            cd ~/prod
            docker-compose down && docker-compose up --build -d
            
      - name: Kill VPN connection
        if: always()
        run: |
          sudo systemctl stop openvpn@client
          sudo systemctl status openvpn@client | cat
          sudo rm -rf /etc/openvpn/

